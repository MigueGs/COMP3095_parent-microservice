
version: '3.9'

services:

  zookeeper:
    container_name: zookeeper
    hostname: zookeeper
    image: confluentinc/cp-zookeeper
    ports:
      - "2181:2181"

    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    networks:
      - spring

  broker:
    container_name: broker
    image: confluentinc/cp-kafka:7.5.0
    ports:
      # External connections (outside docker) use 9092 and host.docker.internal
      - "9092:9092"
      # Internal connections (inside docker) and the container host name (broker)
      - "29092:29092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT, PLAINTEXT_HOST:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://broker:29092, PLAINTEXT_HOST://localhost:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    depends_on:
      zookeeper:
        condition: service_started
    healthcheck:
      test: [ "CMD-SHELL", "kafka-broker-api-versions --bootstrap-server broker:29092 || exit 1" ]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - spring

  kafka-ui:
    image: provectuslabs/kafka-ui:latest
    container_name: kafka-ui
    ports:
      - "8076:8080"
    environment:
      KAFKA_CLUSTERS_NAME: local
      KAFKA_CLUSTERS_BOOTSTRAPSERVERS: broker:29092
      DYNAMIC_CONFIG_ENABLED: 'true'
    depends_on:
      broker:
        condition: service_healthy
    networks:
      - spring

networks:
  spring:
    driver: bridge